user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	  # 백엔드 upstream 설정
    upstream app {
        server simple-app:8080;
    }

    server {
        listen 80;

		    # / 경로로 오는 요청을 upstream / 경로로 포워딩
        location / {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    
    # include /etc/nginx/conf.d/*.conf;
}

stream {
    upstream mysql_rw {
        server mysql-dev1:3306;
    }
    
    upstream mysql_ro {
        least_conn;
        server mysql-dev2:3306;
        server mysql-dev3:3306;
    }
    
    server {
        listen        33066;
        proxy_pass    mysql_rw;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
    }

    server {
        listen        33067;
        proxy_pass    mysql_ro;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
    }
}